<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wegrow.wegrow.mapper.NotifyMapper">
  <resultMap id="BaseResultMap" type="com.wegrow.wegrow.model.Notify">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="TYPE" jdbcType="TINYINT" property="type" />
    <result column="TARGET_ID" jdbcType="INTEGER" property="targetId" />
    <result column="TARGET_TYPE" jdbcType="VARCHAR" property="targetType" />
    <result column="ACTION" jdbcType="TINYINT" property="action" />
    <result column="SENDER_ID" jdbcType="INTEGER" property="senderId" />
    <result column="IS_READ" jdbcType="TINYINT" property="isRead" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.wegrow.wegrow.model.Notify">
    <result column="CONTENT" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, TYPE, TARGET_ID, TARGET_TYPE, ACTION, SENDER_ID, IS_READ, USER_ID, CREATE_TIME, 
    UPDATE_TIME
  </sql>
  <sql id="Blob_Column_List">
    CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.wegrow.wegrow.model.NotifyExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from NOTIFY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.wegrow.wegrow.model.NotifyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from NOTIFY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from NOTIFY
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from NOTIFY
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wegrow.wegrow.model.NotifyExample">
    delete from NOTIFY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wegrow.wegrow.model.Notify">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into NOTIFY (TYPE, TARGET_ID, TARGET_TYPE, 
      ACTION, SENDER_ID, IS_READ, 
      USER_ID, CREATE_TIME, UPDATE_TIME, 
      CONTENT)
    values (#{type,jdbcType=TINYINT}, #{targetId,jdbcType=INTEGER}, #{targetType,jdbcType=VARCHAR}, 
      #{action,jdbcType=TINYINT}, #{senderId,jdbcType=INTEGER}, #{isRead,jdbcType=TINYINT}, 
      #{userId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wegrow.wegrow.model.Notify">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into NOTIFY
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        TYPE,
      </if>
      <if test="targetId != null">
        TARGET_ID,
      </if>
      <if test="targetType != null">
        TARGET_TYPE,
      </if>
      <if test="action != null">
        ACTION,
      </if>
      <if test="senderId != null">
        SENDER_ID,
      </if>
      <if test="isRead != null">
        IS_READ,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="targetId != null">
        #{targetId,jdbcType=INTEGER},
      </if>
      <if test="targetType != null">
        #{targetType,jdbcType=VARCHAR},
      </if>
      <if test="action != null">
        #{action,jdbcType=TINYINT},
      </if>
      <if test="senderId != null">
        #{senderId,jdbcType=INTEGER},
      </if>
      <if test="isRead != null">
        #{isRead,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wegrow.wegrow.model.NotifyExample" resultType="java.lang.Long">
    select count(*) from NOTIFY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update NOTIFY
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        TYPE = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.targetId != null">
        TARGET_ID = #{record.targetId,jdbcType=INTEGER},
      </if>
      <if test="record.targetType != null">
        TARGET_TYPE = #{record.targetType,jdbcType=VARCHAR},
      </if>
      <if test="record.action != null">
        ACTION = #{record.action,jdbcType=TINYINT},
      </if>
      <if test="record.senderId != null">
        SENDER_ID = #{record.senderId,jdbcType=INTEGER},
      </if>
      <if test="record.isRead != null">
        IS_READ = #{record.isRead,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        CONTENT = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update NOTIFY
    set ID = #{record.id,jdbcType=INTEGER},
      TYPE = #{record.type,jdbcType=TINYINT},
      TARGET_ID = #{record.targetId,jdbcType=INTEGER},
      TARGET_TYPE = #{record.targetType,jdbcType=VARCHAR},
      ACTION = #{record.action,jdbcType=TINYINT},
      SENDER_ID = #{record.senderId,jdbcType=INTEGER},
      IS_READ = #{record.isRead,jdbcType=TINYINT},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CONTENT = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update NOTIFY
    set ID = #{record.id,jdbcType=INTEGER},
      TYPE = #{record.type,jdbcType=TINYINT},
      TARGET_ID = #{record.targetId,jdbcType=INTEGER},
      TARGET_TYPE = #{record.targetType,jdbcType=VARCHAR},
      ACTION = #{record.action,jdbcType=TINYINT},
      SENDER_ID = #{record.senderId,jdbcType=INTEGER},
      IS_READ = #{record.isRead,jdbcType=TINYINT},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wegrow.wegrow.model.Notify">
    update NOTIFY
    <set>
      <if test="type != null">
        TYPE = #{type,jdbcType=TINYINT},
      </if>
      <if test="targetId != null">
        TARGET_ID = #{targetId,jdbcType=INTEGER},
      </if>
      <if test="targetType != null">
        TARGET_TYPE = #{targetType,jdbcType=VARCHAR},
      </if>
      <if test="action != null">
        ACTION = #{action,jdbcType=TINYINT},
      </if>
      <if test="senderId != null">
        SENDER_ID = #{senderId,jdbcType=INTEGER},
      </if>
      <if test="isRead != null">
        IS_READ = #{isRead,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wegrow.wegrow.model.Notify">
    update NOTIFY
    set TYPE = #{type,jdbcType=TINYINT},
      TARGET_ID = #{targetId,jdbcType=INTEGER},
      TARGET_TYPE = #{targetType,jdbcType=VARCHAR},
      ACTION = #{action,jdbcType=TINYINT},
      SENDER_ID = #{senderId,jdbcType=INTEGER},
      IS_READ = #{isRead,jdbcType=TINYINT},
      USER_ID = #{userId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CONTENT = #{content,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wegrow.wegrow.model.Notify">
    update NOTIFY
    set TYPE = #{type,jdbcType=TINYINT},
      TARGET_ID = #{targetId,jdbcType=INTEGER},
      TARGET_TYPE = #{targetType,jdbcType=VARCHAR},
      ACTION = #{action,jdbcType=TINYINT},
      SENDER_ID = #{senderId,jdbcType=INTEGER},
      IS_READ = #{isRead,jdbcType=TINYINT},
      USER_ID = #{userId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>